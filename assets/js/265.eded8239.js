(window.webpackJsonp=window.webpackJsonp||[]).push([[265],{595:function(t,a,n){"use strict";n.r(a);var s=n(3),l=Object(s.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"递归"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#递归"}},[t._v("#")]),t._v(" 递归")]),t._v(" "),a("h2",{attrs:{id:"master公式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#master公式"}},[t._v("#")]),t._v(" Master公式")]),t._v(" "),a("p",[a("strong",[t._v("适用范围为子过程规模相等的情况，否则不适用。")])]),t._v(" "),a("p",[t._v("$$\nT(N) = a*T(N/b) + O(N^d)\n$$")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("a: 子问题被调用的次数")])]),t._v(" "),a("li",[a("p",[t._v("N：为母问题规模，本程序的母问题规模为N")])]),t._v(" "),a("li",[a("p",[t._v("$$\nT(N/B): 子问题规模，本程序的子问题规模为：N/2（二分）；\n$$")])]),t._v(" "),a("li",[a("p",[t._v("$$\nO(n^d)： 子问题以为的时间复杂度，本程序为O(N^1)\n$$")])])]),t._v(" "),a("p",[t._v("满足如上公式的程序都可以根据master公式计算时间复杂度：")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("$$\n$log(b,a) > d :复杂度为O（N^log(b,a)\n$$")])]),t._v(" "),a("li",[a("p",[t._v("$$\nlog(b,a) < d :复杂度为O（N^d）\n$$")])]),t._v(" "),a("li",[a("p",[t._v("$$\nlog(b,a) = d :复杂度为O（N^d*logN）\n$$")])])])])}),[],!1,null,null,null);a.default=l.exports}}]);