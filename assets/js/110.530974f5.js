(window.webpackJsonp=window.webpackJsonp||[]).push([[110],{441:function(t,s,a){"use strict";a.r(s);var n=a(3),r=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"算术运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#算术运算符"}},[t._v("#")]),t._v(" 算术运算符")]),t._v(" "),s("p",[t._v("+ \t- \t* \t/ \t**幂运算\t//整除\t%取余(取模)\t()小括号 提高运算优先级")]),t._v(" "),s("p",[t._v("注意运算符的优先顺序")]),t._v(" "),s("p",[t._v("在python3，"),s("strong",[t._v("2个整数相除，得到的结果会是一个浮点数")])]),t._v(" "),s("p",[t._v("除以会返回一个浮点小数")]),t._v(" "),s("p",[t._v("整除只取整数部分，整除向下取整，"),s("strong",[t._v("如为负数则向更小的数值取整")])]),t._v(" "),s("p",[t._v("取余只取余的部分，如10/3=3 余1 则整除结果为1，"),s("strong",[t._v("被除数如果小于除数则整除结果为被除数")])]),t._v(" "),s("h2",{attrs:{id:"算数运算符在字符串中的使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#算数运算符在字符串中的使用"}},[t._v("#")]),t._v(" 算数运算符在字符串中的使用")]),t._v(" "),s("p",[t._v("加法运算符：只能用于2个字符串数据，用来拼接2个字符串。\t数字和字符串之间不能进行"),s("strong",[t._v("加法")]),t._v("运算")]),t._v(" "),s("p",[t._v("乘法运算符：可以用于数字和字符串之间，用于将一个字符串重复多次")]),t._v(" "),s("h2",{attrs:{id:"赋值运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#赋值运算符"}},[t._v("#")]),t._v(" 赋值运算符")]),t._v(" "),s("p",[t._v("= "),s("strong",[t._v("等号")]),t._v("在计算机编程里，我们称为赋值运算符，和数字中的等号有一定的区别")]),t._v(" "),s("p",[t._v("计算机编程里，等号(赋值运算符)的作用是将"),s("strong",[t._v("等号右边的值赋值给左边")])]),t._v(" "),s("p",[t._v("等号的左边不能是常量或表达式 如 10 = x ，1 + 1 =y")]),t._v(" "),s("p",[t._v("X = 1")]),t._v(" "),s("p",[t._v("X +=2   #与X = X + 2相同 +\t-\t*\t/\t//\t**\t\t% \t都可以")]),t._v(" "),s("h2",{attrs:{id:"特殊用法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#特殊用法"}},[t._v("#")]),t._v(" 特殊用法")]),t._v(" "),s("p",[t._v("等号连接的变量可以传递赋值，如 a = b = c =42，则3个变量的赋值都为42，因为"),s("strong",[t._v("等号的作用把右边的值赋值给左边")])]),t._v(" "),s("p",[t._v("不能 a = 1 = b = c 这样写会报错     如提示code  1 则还是报错")]),t._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#特殊用法")]),t._v("\na "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" c "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" d "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" e "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("42")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#等号连接的变量可以传递赋值，等号的作用是把右边的值赋值给左边")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#a = b = 'heloo' = c = d       这样的写法是不正确的")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'b'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'c'")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#其实本质是元组只不过把括号省略了")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#('a', 'b', 'c')")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("h2",{attrs:{id:"变量元组拆包"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#变量元组拆包"}},[t._v("#")]),t._v(" 变量元组拆包")]),t._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("x "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#元组拆包")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#x, y, c =3 , 4   #这样写不行")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#x, y = 3 , 4 , 5 , 6 , 7    拆包值与被赋值值必须相同数量,否则将报错")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("h2",{attrs:{id:"可变长度变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#可变长度变量"}},[t._v("#")]),t._v(" 可变长度变量")]),t._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("o "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("p "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" q "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v("            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#在变量前面加*星号可以使变量为可变长度，中间剩下的直接打包赋值给加星号的变量(按顺序从等号右边赋值给变量剩下的打包给加星号的变量)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("o"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("p"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("q"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#1 [2, 3, 4, 5, 6, 7] 8")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])])])}),[],!1,null,null,null);s.default=r.exports}}]);