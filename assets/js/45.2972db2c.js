(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{376:function(t,s,a){"use strict";a.r(s);var n=a(3),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"方法引用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方法引用"}},[t._v("#")]),t._v(" 方法引用")]),t._v(" "),s("p",[t._v("jdk8中"),s("strong",[t._v("使用了::的用法")]),t._v("。就是把方法当做参数传到stream内部，使stream的每个元素都传入到该方法里面执行一下，双冒号运算就是Java中的[方法引用],[方法引用]的格式是")]),t._v(" "),s("p",[t._v("方法引用:若Lamdba体中的内容已经有方法已经实现了，我们可以使用方法引用")]),t._v(" "),s("p",[t._v("三种类型:对象::实例方法名 ，类::静态方法名，类::实例方法名")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("类型")]),t._v(" "),s("th",[t._v("语法")]),t._v(" "),s("th",[t._v("对应的Lambda表达式")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("静态方法引用")]),t._v(" "),s("td",[t._v("类名::staticMethod")]),t._v(" "),s("td",[t._v("(args) -> 类名.staticMethod(args)")])]),t._v(" "),s("tr",[s("td",[t._v("实例方法引用")]),t._v(" "),s("td",[t._v("inst::instMethod")]),t._v(" "),s("td",[t._v("(args) -> inst.instMethod(args)")])]),t._v(" "),s("tr",[s("td",[t._v("对象方法引用")]),t._v(" "),s("td",[t._v("类名::instMethod")]),t._v(" "),s("td",[t._v("(inst,args) -> 类名.instMethod(args)")])]),t._v(" "),s("tr",[s("td",[t._v("构建方法引用")]),t._v(" "),s("td",[t._v("类名::new")]),t._v(" "),s("td",[t._v("(args) -> new 类名(args)")])])])]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("person "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" person"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getAge")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getAge")]),t._v("\n    \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HashMap")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//等价于")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HsahMap")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br")])])])}),[],!1,null,null,null);s.default=e.exports}}]);