(window.webpackJsonp=window.webpackJsonp||[]).push([[200],{530:function(t,s,a){"use strict";a.r(s);var n=a(3),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"hive-类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hive-类型"}},[t._v("#")]),t._v(" Hive 类型")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("Hive数据类型")]),t._v(" "),s("th",[t._v("Java数据类型")]),t._v(" "),s("th",[t._v("长度")]),t._v(" "),s("th",[t._v("例子")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("TINYINT")]),t._v(" "),s("td",[t._v("byte")]),t._v(" "),s("td",[t._v("1byte有符号整数")]),t._v(" "),s("td",[t._v("20")])]),t._v(" "),s("tr",[s("td",[t._v("SMALINT")]),t._v(" "),s("td",[t._v("short")]),t._v(" "),s("td",[t._v("2byte有符号整数")]),t._v(" "),s("td",[t._v("20")])]),t._v(" "),s("tr",[s("td",[t._v("INT")]),t._v(" "),s("td",[t._v("int")]),t._v(" "),s("td",[t._v("4byte有符号整数")]),t._v(" "),s("td",[t._v("20")])]),t._v(" "),s("tr",[s("td",[t._v("BIGINT")]),t._v(" "),s("td",[t._v("long")]),t._v(" "),s("td",[t._v("8byte有符号整数")]),t._v(" "),s("td",[t._v("20")])]),t._v(" "),s("tr",[s("td",[t._v("BOOLEAN")]),t._v(" "),s("td",[t._v("boolean")]),t._v(" "),s("td",[t._v("布尔类型，true或者false")]),t._v(" "),s("td",[t._v("TRUE FALSE")])]),t._v(" "),s("tr",[s("td",[t._v("FLOAT")]),t._v(" "),s("td",[t._v("float")]),t._v(" "),s("td",[t._v("单精度浮点数")]),t._v(" "),s("td",[t._v("3.14159")])]),t._v(" "),s("tr",[s("td",[t._v("DOUBLE")]),t._v(" "),s("td",[t._v("double")]),t._v(" "),s("td",[t._v("双精度浮点数")]),t._v(" "),s("td",[t._v("3.14159")])]),t._v(" "),s("tr",[s("td",[t._v("STRING")]),t._v(" "),s("td",[t._v("string")]),t._v(" "),s("td",[t._v("字符系列。可以指定字符集。可以使用单引号或者双引号。")]),t._v(" "),s("td",[t._v("‘now is the time’  “for all good men”")])]),t._v(" "),s("tr",[s("td",[t._v("TIMESTAMP")]),t._v(" "),s("td"),t._v(" "),s("td",[t._v("时间类型")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("BINARY")]),t._v(" "),s("td"),t._v(" "),s("td",[t._v("字节数组")]),t._v(" "),s("td")])])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("数据类型")]),t._v(" "),s("th",[t._v("描述")]),t._v(" "),s("th",[t._v("语法示例")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("STRUCT")]),t._v(" "),s("td",[t._v("和c语言中的struct类似，都可以通过“点”符号访问元素内容。例如，如果某个列的数据类型是STRUCT{first STRING, last  STRING},那么第1个元素可以通过字段.first来引用。")]),t._v(" "),s("td",[t._v("struct()  例如struct<street:string, city:string>")])]),t._v(" "),s("tr",[s("td",[t._v("MAP")]),t._v(" "),s("td",[t._v("MAP是一组键-值对元组集合，使用数组表示法可以访问数据。例如，如果某个列的数据类型是MAP，其中键->值对是’first’->’John’和’last’->’Doe’，那么可以通过字段名[‘last’]获取最后一个元素")]),t._v(" "),s("td",[t._v("map()  例如map<string, int>")])]),t._v(" "),s("tr",[s("td",[t._v("ARRAY")]),t._v(" "),s("td",[t._v("数组是一组具有相同类型和名称的变量的集合。这些变量称为数组的元素，每个数组元素都有一个编号，编号从零开始。例如，数组值为[‘John’, ‘Doe’]，那么第2个元素可以通过数组名[1]进行引用。")]),t._v(" "),s("td",[t._v("Array()  例如array"),s("code",[t._v("<string>")])])])])]),t._v(" "),s("p",[t._v("STRUCT为结构体  为一个只有成员变量的类")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Peopel")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" age"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Peopel")]),t._v(" p \np"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\np"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br")])]),s("p",[t._v("创建一个表")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("create")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v(" test"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\nname string"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\nfriends array"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("string"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\nchildren map"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("string"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\naddress struct"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("street:string"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" city:string"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("row")]),t._v(" format delimited "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fields")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("terminated")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("','")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 列分隔符")]),t._v("\ncollection items "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("terminated")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'_'")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- MAP STRUCT 和 ARRAY 的分隔符(数据分割符号)")]),t._v("\nmap "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("keys")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("terminated")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("':'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- MAP中的key与value的分隔符")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br")])]),s("ul",[s("li",[s("p",[t._v("row format delimited fields terminated by ',' -- 列分隔符")])]),t._v(" "),s("li",[s("p",[t._v("collection items terminated by '_'     --MAP STRUCT 和 ARRAY 的分隔符(数据分割符号)")])]),t._v(" "),s("li",[s("p",[t._v("map keys terminated by ':'             -- MAP中的key与value的分隔符")])]),t._v(" "),s("li",[s("p",[t._v("lines terminated by '\\n';               -- 行分隔符")])])]),t._v(" "),s("h2",{attrs:{id:"上传文件到表数据中"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#上传文件到表数据中"}},[t._v("#")]),t._v(" 上传文件到表数据中")]),t._v(" "),s("h3",{attrs:{id:"从网页端上传"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#从网页端上传"}},[t._v("#")]),t._v(" 从网页端上传")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Iekrwh/images/md-images/image-20210918162052851.png",alt:"image-20210918162052851"}})]),t._v(" "),s("p",[t._v("每个文件夹为一个表  直接把文本上传到文件夹(表)中")]),t._v(" "),s("div",{staticClass:"language-tex line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-tex"}},[s("code",[t._v("songsong,bingbing_lili,xiao song:18_xiaoxiao song:19,hui long guan_beijing\nyangyang,caicai_susu,xiao yang:18_xiaoxiao yang:19,chao yang_beijing\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("h3",{attrs:{id:"从系统中上传到表"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#从系统中上传到表"}},[t._v("#")]),t._v(" 从系统中上传到表")]),t._v(" "),s("div",{staticClass:"language-sh line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" /opt/module/\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" datas\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" datas\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[t._v("l在hive命令行总 load:   data local inpath '本地文本路径' into table 表名;")]),t._v(" "),s("p",[t._v("从本地加载表")]),t._v(" "),s("div",{staticClass:"language-sh line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#在hive中")]),t._v("\nload data "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("local")]),t._v(" inpath "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/opt/module/datas/test.txt'")]),t._v(" into table "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("h2",{attrs:{id:"常用类型查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常用类型查询"}},[t._v("#")]),t._v(" 常用类型查询")]),t._v(" "),s("p",[t._v("普通类型  数组  map 结构体查询")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("friends"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("children"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'xiao song'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("address"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("street "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" test"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("h2",{attrs:{id:"类型转化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#类型转化"}},[t._v("#")]),t._v(" 类型转化")]),t._v(" "),s("p",[s("strong",[t._v("隐式类型转换规则如下")])]),t._v(" "),s("ol",[s("li",[s("p",[t._v("任何整数类型都可以隐式地转换为一个范围更广的类型，如TINYINT可以转换成INT，INT可以转换成BIGINT。")])]),t._v(" "),s("li",[s("p",[t._v("所有"),s("strong",[t._v("整数类型、FLOAT和STRING类型")]),t._v("都可以"),s("strong",[t._v("隐式地转换成DOUBLE")]),t._v("。如果STRING类型无法转换为DOUBLE 则返回NULL 如想强转为int 则cast('1'as int)+2")])]),t._v(" "),s("li",[s("p",[t._v("TINYINT、SMALLINT、INT都可以转换为FLOAT。")])]),t._v(" "),s("li",[s("p",[t._v("BOOLEAN类型不可以转换为任何其它的类型。")])]),t._v(" "),s("li",[s("p",[t._v("可以使用"),s("strong",[t._v("CAST")]),t._v("操作显示进行数据类型强制转换")]),t._v(" "),s("p",[t._v("例如CAST('1' AS INT)将把字符串'1' 转换成整数1；如果强制类型转换失败，如执行CAST('X' AS INT)，表达式返回空值 NULL。")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);