(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{355:function(a,s,t){"use strict";t.r(s);var n=t(3),e=Object(n.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方法"}},[a._v("#")]),a._v(" 方法")]),a._v(" "),s("p",[a._v("方法(method)是将具有独立功能的代码块组织成为一个整体，使其具有特殊功能的代码集")]),a._v(" "),s("p",[a._v("方法必须先创建才能使用，称为方法定义")]),a._v(" "),s("p",[a._v("方法创建后并不是直接运行的，需要手动使用后才执行，称为调用")]),a._v(" "),s("h2",{attrs:{id:"方法定义和调用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方法定义和调用"}},[a._v("#")]),a._v(" 方法定义和调用")]),a._v(" "),s("p",[a._v("格式")]),a._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" 方法名"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//方法体")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br")])]),s("p",[a._v("调用")]),a._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[a._v("方法名"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("h2",{attrs:{id:"带参数方法定义和调用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#带参数方法定义和调用"}},[a._v("#")]),a._v(" 带参数方法定义和调用")]),a._v(" "),s("p",[a._v("格式:public static void 方法名(参数){…}")]),a._v(" "),s("p",[a._v("单个参数:")]),a._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" 方法名"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("数据类型 变量名"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("p",[a._v("多个参数:")]),a._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" 方法名"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("数据类型 变量名"),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("数据类型 变量名"),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("…"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("p",[a._v("注意:参数中的数据类型与变量名都不能缺少，多个参数之间使用逗号分隔")]),a._v(" "),s("p",[a._v("调用")]),a._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[a._v("方法名"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("参数"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("参数"),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("h2",{attrs:{id:"形参和实参"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#形参和实参"}},[a._v("#")]),a._v(" 形参和实参")]),a._v(" "),s("p",[a._v("形参:方法定义中的参数")]),a._v(" "),s("p",[a._v("实参:方法调用中的参数")]),a._v(" "),s("h2",{attrs:{id:"带返回值方法的定义和调用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#带返回值方法的定义和调用"}},[a._v("#")]),a._v(" 带返回值方法的定义和调用")]),a._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[a._v("pubilc "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" 数据类型\t方法名"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("参数"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" 数据"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br")])]),s("p",[a._v("方法定义是return后面的返回值要与方法定义上的数据类型一致，否则会报错")]),a._v(" "),s("p",[a._v("调用")]),a._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[a._v("数据类型 变量名 "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("方法名"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("参数"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("h2",{attrs:{id:"方法的注意事项"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方法的注意事项"}},[a._v("#")]),a._v(" 方法的注意事项")]),a._v(" "),s("p",[a._v("方法不能嵌套定义")]),a._v(" "),s("p",[a._v("void表示无返回值，可以省略return，也可单独书写return,后面不加数据")]),a._v(" "),s("p",[a._v("执行return后方法中后面的代码将不再向下执行")]),a._v(" "),s("h2",{attrs:{id:"方法的通用格式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方法的通用格式"}},[a._v("#")]),a._v(" 方法的通用格式")]),a._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[a._v("pubilc "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" 返回值类型 方法名"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("参数"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\n\t方法体"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" 数据"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br")])]),s("p",[a._v("pubic static   修饰符，目前先记住这个格式")]),a._v(" "),s("p",[a._v("定义方法时，要明确返回值类型如没写void，明确参数类型和数量")]),a._v(" "),s("h2",{attrs:{id:"方法重载"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方法重载"}},[a._v("#")]),a._v(" 方法重载")]),a._v(" "),s("p",[a._v("方法重载指同一个类中定义多个方法之间的关系，满足以下条件则构成重载")]),a._v(" "),s("ol",[s("li",[a._v("多个方法在同一个类中")]),a._v(" "),s("li",[a._v("多个方法具有相同的方法")]),a._v(" "),s("li",[a._v("多个方法参数不同，类型不同或者数量不同")])]),a._v(" "),s("p",[a._v("与返回值无关")]),a._v(" "),s("p",[a._v("在调用的时候，java虚拟机会通过参数的不同来区分同名的")]),a._v(" "),s("h2",{attrs:{id:"方法的参数传递"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方法的参数传递"}},[a._v("#")]),a._v(" 方法的参数传递")]),a._v(" "),s("p",[a._v("对于基本数据类型的参数，形式参数的改变，不影响实际参数的值")]),a._v(" "),s("p",[a._v("方法中的变量为局部变量，方法内值的改变不影响实际外的值")]),a._v(" "),s("p",[a._v("引用类型")]),a._v(" "),s("p",[a._v("对于引用类型的参数，形式参数的改变，影响实际参数的值")])])}),[],!1,null,null,null);s.default=e.exports}}]);