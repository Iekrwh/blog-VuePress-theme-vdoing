(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{356:function(s,a,t){"use strict";t.r(a);var n=t(3),e=Object(n.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"面向对象基础"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#面向对象基础"}},[s._v("#")]),s._v(" 面向对象基础")]),s._v(" "),a("h2",{attrs:{id:"类和对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#类和对象"}},[s._v("#")]),s._v(" 类和对象")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("面向对象   指计算机关注的目标")])]),s._v(" "),a("li",[a("p",[s._v("类")]),s._v(" "),a("p",[s._v("类是对象的数据类型")]),s._v(" "),a("p",[s._v("类是具有相同属性和行为的一组对象的集合")])]),s._v(" "),a("li",[a("p",[s._v("对象的属性")]),s._v(" "),a("p",[s._v("对象具有的各种特征，每个属性大都拥有特定的值")])]),s._v(" "),a("li",[a("p",[s._v("对象的行为")]),s._v(" "),a("p",[s._v("对象能够执行的操作")])])]),s._v(" "),a("p",[s._v("类是对象的抽象，对象是类的实体")]),s._v(" "),a("h2",{attrs:{id:"类的定义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#类的定义"}},[s._v("#")]),s._v(" 类的定义")]),s._v(" "),a("p",[s._v("类是java程序的基本组成单位")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" 类名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//成员变量")]),s._v("\n\n\t变量"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("的数据类型 变量"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n\t变量"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("的数据类型 变量"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//成员方法")]),s._v("\n\n\t方法"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("h2",{attrs:{id:"对象的使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#对象的使用"}},[s._v("#")]),s._v(" 对象的使用")]),s._v(" "),a("p",[s._v("创建对象")]),s._v(" "),a("p",[s._v("类名 对象名 = new 类名();")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ObjectTest01")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("P")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ObjectTest01")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("使用对象")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("使用成员变量")]),s._v(" "),a("p",[s._v("格式:对象名.变量名")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[s._v("p"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("barand"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("使用成员方法")]),s._v(" "),a("p",[s._v("格式:对象名.方法名")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[s._v("p"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])])]),s._v(" "),a("h2",{attrs:{id:"对象内存图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#对象内存图"}},[s._v("#")]),s._v(" 对象内存图")]),s._v(" "),a("h3",{attrs:{id:"单个对象-new-一个内存地址-独有的-指向类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#单个对象-new-一个内存地址-独有的-指向类"}},[s._v("#")]),s._v(" 单个对象 new 一个内存地址（独有的） 指向类")]),s._v(" "),a("p",[s._v("成员变量 和 成员方法都是独用的不与其他发生冲突，只是指向调用")]),s._v(" "),a("p",[s._v("成员方法 对象调用执行完后 会从栈内存消失（清空）")]),s._v(" "),a("h3",{attrs:{id:"多个对象-第一个对象new一个内存地址"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#多个对象-第一个对象new一个内存地址"}},[s._v("#")]),s._v(" 多个对象 第一个对象new一个内存地址")]),s._v(" "),a("p",[s._v("第二个对象 new一个内存地址")]),s._v(" "),a("p",[s._v("两个对象分别指向不同的内存地址但方法和代码相同，互相之前无影响")]),s._v(" "),a("p",[s._v("如还有对象申请新的内存还是无影响，各走各的")]),s._v(" "),a("h3",{attrs:{id:"多个对象指向相同内存地址"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#多个对象指向相同内存地址"}},[s._v("#")]),s._v(" 多个对象指向相同内存地址")]),s._v(" "),a("p",[s._v("第一个对象new一个内存地址")]),s._v(" "),a("p",[s._v("将第一个对象的地址赋值给第二个对象")]),s._v(" "),a("p",[s._v("两个对象指向的内存地址都是相同的，因为第二个对象的内存是由第一个对象申请的内存赋值的")]),s._v(" "),a("p",[s._v("第一个对象  申请新的内存地址")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ObjectTest01")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("P")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ObjectTest01")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("第二个对象  将第一个对象申请的内存地址赋值给第二个对象使用")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ObjectTest01")]),s._v(" P2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" p"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h2",{attrs:{id:"成员变量和局部变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#成员变量和局部变量"}},[s._v("#")]),s._v(" 成员变量和局部变量")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Iekrwh/images/md-images/image-20210509204442710-1620564285559.png",alt:"image-20210509204442710"}})]),s._v(" "),a("h2",{attrs:{id:"封装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#封装"}},[s._v("#")]),s._v(" 封装")]),s._v(" "),a("p",[s._v("private关键字")]),s._v(" "),a("p",[s._v("是一个权限修饰符，可以修饰成员(成员变量和成员方法)")]),s._v(" "),a("p",[s._v("作用是保护成员不被别的类使用，被private修饰的成员只在本类中才能访问")]),s._v(" "),a("p",[s._v("如需要类外部使用则需要定义java内部方法 get/set方法")]),s._v(" "),a("p",[s._v("set 被修饰的变量名 "),a("strong",[s._v("首字母要大写")]),s._v("如setAge")]),s._v(" "),a("p",[s._v("格式:")]),s._v(" "),a("p",[s._v("set是传递参数")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[s._v("pulic "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("setXxx")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("数据类型 变量"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n\t\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("hr"),s._v(" "),a("p",[a("strong",[s._v("get是返回参数")])]),s._v(" "),a("p",[s._v("get\t被修饰的变量名 首字母要大写如getAge")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[s._v("pulic 返回值的类型 getXxx "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" 被修饰的变量名\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("类外直接调用set和get分别设置和获取值")]),s._v(" "),a("h2",{attrs:{id:"this关键字使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#this关键字使用"}},[s._v("#")]),s._v(" this关键字使用")]),s._v(" "),a("p",[s._v("用this修饰的变量用于指代成员变量")]),s._v(" "),a("p",[s._v("如在类方法中 参数和成员变量名称一致则系统认为代码指代的为方法中的局部变量（形参），需要加this修饰指代为成员变量")]),s._v(" "),a("p",[s._v("this 解决局部变量隐藏成员变量")]),s._v(" "),a("p",[s._v("方法被哪个对象调用了，this就代表哪个对象")]),s._v(" "),a("h2",{attrs:{id:"封装概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#封装概念"}},[s._v("#")]),s._v(" 封装概念")]),s._v(" "),a("p",[s._v("封装是面向对象三大特征之一（封装，继承，多态）")]),s._v(" "),a("p",[s._v("封装的原则")]),s._v(" "),a("p",[s._v("将类的某些信息隐藏在类内部，不允许外部直接访问，而是通过类提供的方法来实现对隐藏信息的操作和访问")]),s._v(" "),a("p",[s._v("成员变量private，提供对应的getXxx()/setXxx()方法")]),s._v(" "),a("p",[s._v("封装的好处")]),s._v(" "),a("p",[s._v("通过方法来控制成员变量的操作，提高了代码的安全性")]),s._v(" "),a("p",[s._v("把代码用方法进行封装，提高了代码的复用性。")]),s._v(" "),a("h2",{attrs:{id:"构造方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#构造方法"}},[s._v("#")]),s._v(" 构造方法")]),s._v(" "),a("p",[s._v("构造方法是一种特殊的方法")]),s._v(" "),a("p",[s._v("作用:创建对象   主要是完成对象数据的初始化")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" 类名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n\t\t修饰符 类名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("参数"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" \n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("注意事项")]),s._v(" "),a("p",[s._v("构造方法的创建")]),s._v(" "),a("p",[s._v("当类中没有创建无参构造方法系统默认的自动生成无参构造方法")]),s._v(" "),a("p",[s._v("如果定义了构造方法，系统将不再提供默认的构造方法")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[s._v("pubilc 类名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("参数"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("构造方法的重载")]),s._v(" "),a("p",[a("strong",[s._v("如果定义了带参数的构造方法，还要使用无参构造方法，必须再写一个无参数构造方法，因为系统不再提供默认的无参数构造方法")])]),s._v(" "),a("p",[a("strong",[s._v("建议无论是否使用，都手工书写无参构造方法")])]),s._v(" "),a("h2",{attrs:{id:"标准类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#标准类"}},[s._v("#")]),s._v(" 标准类")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("成员变量")]),s._v(" "),a("p",[s._v("使用private修饰")])]),s._v(" "),a("li",[a("p",[s._v("构造方法")]),s._v(" "),a("p",[s._v("提供一个无参构造方法")]),s._v(" "),a("p",[s._v("提供一个带多个参数的构造方法")])]),s._v(" "),a("li",[a("p",[s._v("成员方法")]),s._v(" "),a("p",[s._v("提供每一个成员变量对应的setXxx()/getXxx()")]),s._v(" "),a("p",[s._v("提供一个显示对象信息的show()")])]),s._v(" "),a("li",[a("p",[s._v("创建对象并为其成员变量赋值的两种方式")]),s._v(" "),a("p",[s._v("无参构造方法创建对象后使用setXxx()赋值")]),s._v(" "),a("p",[s._v("使用带参构造方法直接创建带有属性值的对象")])])])])}),[],!1,null,null,null);a.default=e.exports}}]);