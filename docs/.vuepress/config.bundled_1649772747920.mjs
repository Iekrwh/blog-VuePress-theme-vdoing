// docs/.vuepress/config.ts
import {
  defineConfig4CustomTheme
} from "vuepress/config";
import dayjs from "dayjs";

// docs/.vuepress/config/baiduCode.ts
var baiduCode_default = "503f098e7e5b3a5b5d8c5fc2938af002";

// docs/.vuepress/config/htmlModules.ts
var htmlModule = {
  homeSidebarB: `<div style="padding: 0.95rem">
    <p style="
      color: var(--textColor);
      opacity: 0.9;
      font-size: 20px;
      font-weight: bold;
      margin: 0 0 8px 0;
    ">\u963F\u55B5\u55B5\u9707\u538B
    <img src="https://cdn.jsdelivr.net/gh/Iekrwh/images/md-images/2$B8JFSXYL_RLH8_GYY7AS1.gif"  style="width:100%;" />
    </div>`
};
var htmlModules_default = htmlModule;

// docs/.vuepress/webSiteInfo/readFile.js
import fs from "fs";
import path from "path";
import matter from "gray-matter";
import chalk from "chalk";
var log = console.log;
var docsRoot = path.join("D:\\code\\blog-VuePress-theme-vdoing\\docs\\.vuepress\\webSiteInfo", "..", "..", "..", "docs");
function readFileList(excludeFiles = [""], dir = docsRoot, filesList = []) {
  const files = fs.readdirSync(dir);
  files.forEach((item, index) => {
    let filePath = path.join(dir, item);
    const stat = fs.statSync(filePath);
    if (!(excludeFiles instanceof Array)) {
      log(chalk.yellow(`error: \u4F20\u5165\u7684\u53C2\u6570\u4E0D\u662F\u4E00\u4E2A\u6570\u7EC4\u3002`));
    }
    excludeFiles.forEach((excludeFile) => {
      if (stat.isDirectory() && item !== ".vuepress" && item !== "@pages" && item !== excludeFile) {
        readFileList(excludeFiles, path.join(dir, item), filesList);
      } else {
        if (path.basename(dir) !== "docs") {
          const fileNameArr = path.basename(filePath).split(".");
          let name = null, type = null;
          if (fileNameArr.length === 2) {
            name = fileNameArr[0];
            type = fileNameArr[1];
          } else if (fileNameArr.length === 3) {
            name = fileNameArr[1];
            type = fileNameArr[2];
          } else {
            log(chalk.yellow(`warning: \u8BE5\u6587\u4EF6 "${filePath}" \u6CA1\u6709\u6309\u7167\u7EA6\u5B9A\u547D\u540D\uFF0C\u5C06\u5FFD\u7565\u751F\u6210\u76F8\u5E94\u6570\u636E\u3002`));
            return;
          }
          if (type === "md") {
            filesList.push({
              name,
              filePath
            });
          }
        }
      }
    });
  });
  return filesList;
}
function readEachFileWords(excludeFiles = [""], cn, en) {
  const filesListWords = [];
  const filesList = readFileList(excludeFiles);
  filesList.forEach((item) => {
    const content = getContent(item.filePath);
    var len = counter(content);
    var readingTime = readTime(len, cn, en);
    var wordsCount = 0;
    wordsCount = len[0] + len[1];
    if (wordsCount >= 1e3) {
      wordsCount = Math.round(wordsCount / 100) / 10 + "k";
    }
    const fileMatterObj = matter(content, {});
    const matterData = fileMatterObj.data;
    filesListWords.push({ ...item, wordsCount, readingTime, ...matterData });
  });
  return filesListWords;
}
function readTime(len, cn = 300, en = 160) {
  var readingTime = len[0] / cn + len[1] / en;
  if (readingTime > 60 && readingTime < 60 * 24) {
    let hour = parseInt(readingTime / 60);
    let minute = parseInt(readingTime - hour * 60);
    if (minute === 0) {
      return hour + "h";
    }
    return hour + "h" + minute + "m";
  } else if (readingTime > 60 * 24) {
    let day = parseInt(readingTime / (60 * 24));
    let hour = parseInt((readingTime - day * 24 * 60) / 60);
    if (hour === 0) {
      return day + "d";
    }
    return day + "d" + hour + "h";
  }
  return readingTime < 1 ? "1" : parseInt(readingTime * 10) / 10 + "m";
}
function getContent(filePath) {
  return fs.readFileSync(filePath, "utf8");
}
function counter(content) {
  const cn = (content.match(/[\u4E00-\u9FA5]/g) || []).length;
  const en = (content.replace(/[\u4E00-\u9FA5]/g, "").match(/[a-zA-Z0-9_\u0392-\u03c9\u0400-\u04FF]+|[\u4E00-\u9FFF\u3400-\u4dbf\uf900-\ufaff\u3040-\u309f\uac00-\ud7af\u0400-\u04FF]+|[\u00E4\u00C4\u00E5\u00C5\u00F6\u00D6]+|\w+/g) || []).length;
  return [cn, en];
}

// docs/.vuepress/config.ts
var config_default = defineConfig4CustomTheme({
  theme: "vdoing",
  locales: {
    "/": {
      lang: "zh-CN",
      title: "Chiriri's blog",
      description: "\u540E\u7AEF\u6280\u672F\u535A\u5BA2,\u4E13\u6CE8\u540E\u7AEF\u5B66\u4E60\u4E0E\u603B\u7ED3\u3002Java,Spring,Scala,Hadoop,Spark,Flink,Python,Linux,Docker\u7B49\u6280\u672F\u6587\u7AE0\u3002"
    }
  },
  themeConfig: {
    bodyBgImg: "/img/aqua.jpg",
    bodyBgImgOpacity: 1,
    nav: [
      { text: "\u9996\u9875", link: "/" },
      {
        text: "\u540E\u7AEF",
        link: "/Java/",
        items: [
          {
            text: "Java",
            items: [
              { text: "JavaSE", link: "/pages/df8281/" },
              { text: "JavaEE", link: "/pages/544a3f/" }
            ]
          },
          {
            text: "Python",
            items: [
              { text: "Python", link: "/pages/35c9ab/" },
              { text: "Python\u6A21\u5757", link: "/pages/cf7131/" },
              { text: "\u673A\u5668\u5B66\u4E60", link: "/pages/ddf9fb/" }
            ]
          },
          {
            text: "\u670D\u52A1\u5668",
            items: [
              { text: "Linux", link: "/pages/124a07/" },
              { text: "SQL", link: "/pages/e051f6/" }
            ]
          }
        ]
      },
      {
        text: "\u5927\u6570\u636E",
        link: "/hadoop/",
        items: [
          { text: "Hadoop", link: "/pages/8e0c98/" },
          { text: "Zookeeper", link: "/pages/f38fc8/" },
          { text: "Hive", link: "/pages/2315d6/" },
          { text: "Flume", link: "/pages/b084db/" },
          { text: "Kafka", link: "/pages/872cdc/" },
          { text: "Azkaban", link: "/pages/bac882/" },
          { text: "Hbase", link: "/pages/310c39/" },
          { text: "Scala", link: "/pages/d2afbe/" },
          { text: "Spark", link: "/pages/cc783e/" }
        ]
      },
      {
        text: "\u524D\u7AEF",
        link: "/web/",
        items: [
          { text: "html", link: "/pages/23186a/" },
          { text: "Vue2", link: "/pages/6af871/" }
        ]
      },
      {
        text: "408",
        link: "/408/",
        items: [
          { text: "\u6570\u636E\u7ED3\u6784\u4E0E\u7B97\u6CD5", link: "/pages/8e5251/" }
        ]
      },
      {
        text: "\u7D22\u5F15",
        link: "/archives/",
        items: [
          { text: "\u5206\u7C7B", link: "/categories/" },
          { text: "\u6807\u7B7E", link: "/tags/" },
          { text: "\u5F52\u6863", link: "/archives/" }
        ]
      }
    ],
    sidebarDepth: 2,
    logo: "/img/logo.png",
    repo: "Iekrwh/blog-VuePress-theme-vdoing",
    searchMaxSuggestions: 10,
    lastUpdated: "\u4E0A\u6B21\u66F4\u65B0",
    docsDir: "docs",
    editLinks: true,
    editLinkText: "\u7F16\u8F91",
    sidebar: "structuring",
    author: {
      name: "Iekr",
      link: "https://github.com/Iekrwh"
    },
    blogger: {
      avatar: "https://cdn.jsdelivr.net/gh/Iekrwh/images/md-images/$7ZY44WI036RW5{EPWQXCX6.jpg",
      name: "Iekr",
      slogan: "\u82E6\u903C\u540E\u7AEF\u5F00\u53D1"
    },
    social: {
      icons: [
        {
          iconClass: "icon-youjian",
          title: "\u53D1\u90AE\u4EF6",
          link: "mailto:iekr_wh@qq.com"
        },
        {
          iconClass: "icon-github",
          title: "GitHub",
          link: "https://github.com/Iekrwh"
        },
        {
          iconClass: "icon-erji",
          title: "\u542C\u97F3\u4E50",
          link: "http://music.163.com/album?id=73927024"
        }
      ]
    },
    footer: {
      createYear: 2022,
      copyrightInfo: 'Iekr | Blog <br> <a href="http://beian.miit.gov.cn/" target="_blank">\u7CA4ICP\u59072022039661\u53F7</a>'
    },
    htmlModules: htmlModules_default,
    blogInfo: {
      blogCreate: "2022-03-18",
      indexView: true,
      pageView: true,
      readingTime: true,
      eachFileWords: readEachFileWords([""], 300, 160),
      mdFileCountType: "archives",
      totalWords: "archives",
      moutedEvent: ".tags-wrapper",
      indexIteration: 2500,
      pageIteration: 2500
    },
    indexImg: {
      navColor: 2,
      switchNavColor: true,
      bgTimeColorArray: [
        "transparent",
        "transparent",
        "transparent",
        "transparent"
      ],
      bgTimeColor: true,
      descFade: true,
      desc: [
        "Iekr\u4E2A\u4EBA\u535A\u5BA2\uFF0C\u79EF\u8DEC\u6B65\u4EE5\u81F3\u5343\u91CC\uFF0C\u81F4\u656C\u6BCF\u4E2A\u7231\u5B66\u4E60\u7684\u4F60 \u2014\u2014 \u6765\u81EA Evan Xu",
        "\u6545\u4E8B\u7531\u6211\u4E66\u5199\uFF0C\u65C5\u7A0B\u7531\u4F60\u89C1\u8BC1\uFF0C\u4F20\u5947\u7531\u5979\u8046\u542C \u2014\u2014 \u6765\u81EA Young Kbt",
        "\u8FD9\u4E00\u751F\u6CE2\u6F9C\u58EE\u9614\u6216\u662F\u4E0D\u60CA\u90FD\u6CA1\u95EE\u9898 \u2014\u2014 \u6765\u81EA Weibo"
      ],
      descFontSize: "1.4rem",
      descFadeInTime: 200,
      descFadeOutTime: 100,
      descNextTime: 800,
      bubble: true,
      bubblePosition: 0,
      bubbleNum: 200
    }
  },
  head: [
    ["link", { rel: "icon", href: "/img/favicon.ico" }],
    ["link", { rel: "stylesheet", href: "//at.alicdn.com/t/font_3114978_qe0b39no76.css" }],
    ["link", { rel: "stylesheet", href: "//at.alicdn.com/t/font_3114978_qe0b39no76.css" }],
    ["meta", { name: "referrer", content: "no-referrer-when-downgrade" }],
    [
      "link",
      {
        rel: "stylesheet",
        href: "https://at.alicdn.com/t/font_3077305_pt8umhrn4k9.css"
      }
    ],
    [
      "meta",
      {
        name: "keywords",
        content: "\u540E\u7AEF\u535A\u5BA2,\u4E2A\u4EBA\u6280\u672F\u535A\u5BA2,\u540E\u7AEF/\u524D\u7AEF\u5F00\u53D1,\u540E\u7AEF/\u524D\u7AEF\u6846\u67B6,web\u524D\u7AEF,\u540E\u7AEF\u9762\u8BD5\u9898,\u6280\u672F\u6587\u6863,\u5B66\u4E60,\u9762\u8BD5,Java,Scala,Hadoop,Spring,Spring Boot,Spring Cloud,js,ES6,TypeScript,vue,python,css3,html5,Node,git,github,markdown"
      }
    ],
    ["meta", { name: "baidu-site-verification", content: "7F55weZDDc" }],
    ["meta", { name: "theme-color", content: "#11a8cd" }]
  ],
  plugins: [
    "vuepress-plugin-baidu-autopush",
    [
      "vuepress-plugin-baidu-tongji",
      {
        hm: baiduCode_default
      }
    ],
    "fulltext-search",
    [
      "one-click-copy",
      {
        copySelector: [
          'div[class*="language-"] pre',
          'div[class*="aside-code"] aside'
        ],
        copyMessage: "\u590D\u5236\u6210\u529F",
        duration: 1e3,
        showInMobile: false
      }
    ],
    [
      "demo-block",
      {
        settings: {
          jsfiddle: false,
          codepen: true,
          horizontal: false
        }
      }
    ],
    [
      "vuepress-plugin-zooming",
      {
        selector: ".theme-vdoing-content img:not(.no-zoom)",
        options: {
          bgColor: "rgba(0,0,0,0.6)"
        }
      }
    ],
    [
      "vuepress-plugin-comment",
      {
        choosen: "gitalk",
        options: {
          clientID: "a6e1355287947096b88b",
          clientSecret: "f0e77d070fabfcd5af95bebb82b2d574d7248d71",
          repo: "blog-gitalk-comment",
          owner: "iekr",
          admin: ["iekr"],
          pagerDirection: "last",
          id: "<%- (frontmatter.permalink || frontmatter.to.path).slice(-16) %>",
          title: "\u300C\u8BC4\u8BBA\u300D<%- frontmatter.title %>",
          labels: ["Gitalk", "Comment"],
          body: "\u9875\u9762\uFF1A<%- window.location.origin + (frontmatter.to.path || window.location.pathname) %>"
        }
      }
    ],
    [
      "@vuepress/last-updated",
      {
        transformer: (timestamp, lang) => {
          return dayjs(timestamp).format("YYYY/MM/DD, HH:mm:ss");
        }
      }
    ],
    [
      {
        name: "custom-plugins",
        globalUIComponents: ["BlockToggle", "LastReadingPopup"]
      }
    ]
  ],
  markdown: {
    lineNumbers: true,
    extractHeaders: ["h2", "h3", "h4", "h5", "h6"]
  },
  extraWatchFiles: [".vuepress/config.ts", ".vuepress/config/htmlModules.ts"]
});
export {
  config_default as default
};
//# sourceMappingURL=data:application/json;base64,
