(window.webpackJsonp=window.webpackJsonp||[]).push([[125],{628:function(t,a,s){"use strict";s.r(a);var e=s(15),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"注解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#注解"}},[t._v("#")]),t._v(" 注解")]),t._v(" "),s("p",[t._v("作用:对我们的程序进行标注和解释")]),t._v(" "),s("ul",[s("li",[t._v("@Override: 描述子类重写父类的方法")]),t._v(" "),s("li",[t._v("@Deprecated: 描述方法已过时")]),t._v(" "),s("li",[t._v("@SuppressWarinings: 压制警告")])]),t._v(" "),s("h2",{attrs:{id:"自定义注解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#自定义注解"}},[t._v("#")]),t._v(" 自定义注解")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@interface")]),t._v(" 注解名称"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 类型:基本数据类型 String Class 注解 枚举 以上类型的一维数组如 int数组 枚举数组...等等")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" 属性类型 属性名 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" 默认值"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("p",[t._v("如没有给出默认值,则在使用该注解时要传递值")]),t._v(" "),s("p",[t._v("如果该注解只有一个value注解没有默认值,则使用该注解时传递参数可以省略name")]),t._v(" "),s("h2",{attrs:{id:"元注解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#元注解"}},[t._v("#")]),t._v(" 元注解")]),t._v(" "),s("p",[t._v("描述注解的注解")]),t._v(" "),s("ul",[s("li",[t._v("@Target:  指定了注解能在哪里使用\n"),s("ul",[s("li",[t._v("ElementType.FIELD:  成员变量")]),t._v(" "),s("li",[t._v("ElementType.TYPE: 类")]),t._v(" "),s("li",[t._v("ElementType.METHOD: 方法")])])]),t._v(" "),s("li",[t._v("@Retention: 注解的生命周期(保留时间)\n"),s("ul",[s("li",[t._v("RetentionPolicy.RUNTIME: 如果没有指定时间,则只能在java中存活,编译成class文件后注解消失")])])]),t._v(" "),s("li",[t._v("@Inherited: 表示修饰的自定义注解可以被子类继承")]),t._v(" "),s("li",[t._v("@Documented: 表示该自定义注解,会出现在API文档里面")])]),t._v(" "),s("h2",{attrs:{id:"获取方法中是否存在指定注解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#获取方法中是否存在指定注解"}},[t._v("#")]),t._v(" 获取方法中是否存在指定注解")]),t._v(" "),s("ul",[s("li",[t._v("isAnnotationPresent(注解的字节码): 判断方法中是否有指定注解 返回布尔值 注意使用改方法判断时,注解要设置生命周期保留到运行期间  @Retention(RetentionPolicy.RUNTIME)")])])])}),[],!1,null,null,null);a.default=n.exports}}]);