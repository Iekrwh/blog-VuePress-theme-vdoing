(window.webpackJsonp=window.webpackJsonp||[]).push([[116],{616:function(t,s,a){"use strict";a.r(s);var n=a(15),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"方法引用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方法引用"}},[t._v("#")]),t._v(" 方法引用")]),t._v(" "),a("p",[t._v("jdk8中使用了::的用法。就是把方法当做参数传到stream内部，使stream的每个元素都传入到该方法里面执行一下，双冒号运算就是Java中的[方法引用],[方法引用]的格式是")]),t._v(" "),a("p",[t._v("方法引用：若Lamdba体中的内容已经有方法已经实现了，我们可以使用方法引用")]),t._v(" "),a("p",[t._v("三种类型：对象：：实例方法名 ，类：：静态方法名，类：：实例方法名")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("类型")]),t._v(" "),a("th",[t._v("语法")]),t._v(" "),a("th",[t._v("对应的Lambda表达式")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("静态方法引用")]),t._v(" "),a("td",[t._v("类名::staticMethod")]),t._v(" "),a("td",[t._v("(args) -> 类名.staticMethod(args)")])]),t._v(" "),a("tr",[a("td",[t._v("实例方法引用")]),t._v(" "),a("td",[t._v("inst::instMethod")]),t._v(" "),a("td",[t._v("(args) -> inst.instMethod(args)")])]),t._v(" "),a("tr",[a("td",[t._v("对象方法引用")]),t._v(" "),a("td",[t._v("类名::instMethod")]),t._v(" "),a("td",[t._v("(inst,args) -> 类名.instMethod(args)")])]),t._v(" "),a("tr",[a("td",[t._v("构建方法引用")]),t._v(" "),a("td",[t._v("类名::new")]),t._v(" "),a("td",[t._v("(args) -> new 类名(args)")])])])]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[t._v("person "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" person"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getAge")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),t._v("：：getAge\n    \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HashMap")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//等价于")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HsahMap")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])])])}),[],!1,null,null,null);s.default=e.exports}}]);